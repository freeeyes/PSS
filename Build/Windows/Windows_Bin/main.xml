<?xml version="1.0" encoding="UTF-8"?>
<config>
	<!-- ByteOrder表明当前使用的是网络字序还是主机字序，NET_ORDER是网络字序，HOST_ORDER为主机字节序 -->
	<!-- ByteOrder会指定当前所有的使用的BuffPacket，在流入数据的时候，自动转换成你需要的字序，完全不用你写额外的代码-->
	<NetWorkMode Mode="Iocp" BackLog="100" ByteOrder="HOST_ORDER" desc="设置框架使用的网络模型,windows下mode支持Iocp。Linux下支持Select,Poll和Epoll，如果需要更换修改Mode参数，否则不用改"/>
	<ServerType Type="0" name="Pss Service" displayname="PssService" Debug="0" DebugSize="1000" IsClose="0" desc="Type设置为0为当前启动，1为Linux后台执行，windows启动系统服务，Debug为0关闭debug日志，Debug为1为打开DEBUG日志,IsClose0为允许关闭，1为不允许。" />
	<ServerID id="1001" desc="当前服务器的ID编号" />
	<ServerName name="Freeeyes" desc="当前服务器的名称" />
	<ServerVersion Version="1.00" desc="当前服务器版本" />
	<BuffPacket Count="5000" desc="设置BuffPacket内存池的大小" />
	<!-- ip自适应Ipv4和Ipv6,不需要额外指定 -->
	<!-- 如果框架都使用默认的ParseID，则这里可以不需要输入ParseID参数 否则，给出指定的ParseID是谁，比如ParseID="1" --> 
	<TCPServerIP ip="INADDR_ANY" port="10002" ParseID="1" desc="监听TCP服务器的IP和端口，可以是多个，要用多个" />
	<TCPServerIP ip="INADDR_ANY" port="10003" ParseID="1" desc="监听TCP服务器的IP和端口，可以是多个，要用多个" />
	<!-- <TCPServerIP ip="fe80::d433:372b:d0ee:edc4%12" port="10002" desc="监听TCP服务器的IP和端口，可以是多个(IPv6地址测试)" /> -->
	<!-- <TCPServerIP ip="127.0.0.1" port="10003" desc="监听TCP服务器的IP和端口，可以是多个，要用多个，只要多写几个这样的节点即可" /> -->
	
	<!-- "H&B"指的是包头包体模式，"STREAM"是流模式 OrgLength在H&B是包头默认长度 -->
	<!-- 第一个ParseParse是默认ParseID，如果TCPServerIP或者UDPServerIP没有指定，则默认采用这个ParseID，ParseID必须大于0 -->
	<PacketParse ParseID="1" ModulePath="./" ModuleName="PacketParse_Interface.dll" Type="HB" OrgLength="40" />

	<Console support="1" sip="INADDR_ANY" sport="10010" desc="维护端口是否开启，support为1是开启，0是关闭，后面对应IP和端口" />
	<ConsoleKey Key="freeeyes" desc="维护端允许登录的Key值,可以是多个，key值中不能包含空格" />
	<ConsoleKey Key="guest" desc="维护端允许登录的Key值,可以是多个，key值中不能包含空格" />
	<!-- <ConsoleClient cip="127.0.0.1" desc="维护端口可以访问的对应的客户端IP地址，可以支持多个" /> -->
	
	<!-- 消息处理线程相关参数设置 -->
	<Message Msg_High_mark="64000" Msg_Low_mark="64000" Msg_Buff_Max_Size="20480" Msg_Thread="5" Msg_MaxQueue="10000" desc="消息处理线程相关参数设置，" />
	
	<!-- 测试Tcp插件加载流程的用例 -->
	<ModuleManager MaxCount="100" desc="框架支持的最大插件数量" />
	
	<!--TTy串口,红外和蓝牙接口连接管理器对应配置参数,MaxDevCount是设备的最大连接上限,timecheck是自检周期,单位是秒 -->
	<TTYClient MaxDevCount="100" TimeCheck="120" />	
	
	<!-- 允许插件设置个性化,可以多个,这里可以单独设置每个插件的不同参数,可以与Module设置同时生效,亦可不用此设置 -->
	<!-- <ModuleInfo ModuleSPath="./" ModuleSName="Monitord.dll" ModuleSParam="" Desc="ModuleParam为插件启动参数"/> -->
	<!-- <ModuleInfo ModuleSPath="./" ModuleSName="RealTimeMonitord.dll" ModuleSParam="../../example-Module/RealTimeMonitor/Config.conf" Desc="ModuleParam为插件启动参数"/> -->
	<ModuleInfo ModuleSPath="./" ModuleSName="TcpTest.dll" ModuleSParam="" Desc="ModuleParam为插件启动参数"/> 
	<!-- <ModuleInfo ModuleSPath="./" ModuleSName="MonitorServerd.dll" ModuleSParam="..\..\example-Module\MonitorServer\Monitor.xml" Desc="ModuleParam为插件启动参数"/> -->
	
	<!-- Linux Core Dump相关设置 -->
	<CoreSetting CoreNeed="0" Script="" desc="是否需要打开Core文件支持，0为不需要，1为需要" />
	
	<!-- 命令包统计相关设置 -->
	<CommandAccount Account="1" FlowAccount="1" MaxCommandCount="2000" desc="Account为1记录统计命令日志，0为不记录，FlowAccount为流量统计，1为开启，0为关闭" />
	<!-- 接收数据包连接相关设置 -->
	<RecvInfo RecvBuffSize="20480" RecvQueueTimeout="50" desc="接收客户端数据配置参数" />
	<!-- 发送数据包连接相关设置 -->
	<SendInfo SendQueueMax="100" TcpNodelay="0" MaxBlockSize="5120" BlockCount="10" SendTimeout="50" SendQueueTimeout="50" SendQueueCount="1" PutQueueTimeout="100" desc="发送到客户端需要配置的参数" />
	<!-- 监控线程相关设置 -->
	<ThreadInfo ThreadTimeout="30" ThreadTimeCheck="60" DisposeTimeout="40" PutQueueTimeout="100" desc="工作线程相关参数" />
	<!-- 监控线程AI相关设置 -->
	<ThreadInfoAI AI="0" CheckTime="30" TimeoutCount="1" StopTime="30" ReturnDataType="1" ReturnData="ff ff" desc="工作线程负载自我监控相关设置，AI=0关闭，1打开" />
	<!-- 客户端连接池相关设置 -->
	<ClientInfo HandlerCount="5000" MaxHandlerCount="10000" MaxConnectTime="120" CheckAliveTime="60" MaxBuffRecv="1024" desc="客户端链接相关参数"/>
	<!-- 服务器间连接相关设置 -->
	<ConnectServer TimeInterval="500" TimeCheck="30" Recvbuff="1024" RunType="0" Count="100" desc="框架连接其它远程服务器相关参数，TimeInterval是连接每个服务器之间的保护时间，单位是毫秒,TimeCheck单位是秒,RunType 0是同步模式，1是异步模式" />
	<!-- CPU&Memory监控相关设置 -->
	<Monitor CpuAndMemory="1" CpuMax="50" MemoryMax="1000" desc="是否对CPU和内存定时监控，并输出日志，0为关闭监控，1是打开监控" />
	<!-- 屏幕输出相关设置 -->
	<AceDebug TrunOn="0" DebugName="./serverdebug.log" ChkInterval="600" LogFileMaxSize="10240" LogFileMaxCnt="3" Level="" desc="ACEDEBUG文件输出配置，TrunOn=0为不使用，1为使用" />
	
	<!-- 第一个ParseParse是默认ParseID，如果TCPServerIP或者UDPServerIP没有指定，则默认采用这个ParseID，ParseID必须大于0 -->
	<!-- <UDPServerIP uip="127.0.0.1" uport="10003" uParseID="1" uMaxRecvSize="1024" desc="监听UDP服务器的IP和端口，可以是多个" /> -->
	
	<!-- TS定时器列表参数,TimerListPool是定时容器中最多定时任务的数量,设置为0,为不开启 -->
	<TSTimer TimerListPool="0" />
	
	<!-- 设置转发接口,可以是多个, 与端口一一对应 -->
	<!-- Mode 0 只转发数据，不将回应数据回应客户端。 1 转发数据，并接受转发服务器的回应数据回应给客户端 -->
	<!-- ConnectState 0 和转发连接不同步。 1 和转发连接同步 -->
	<!-- <TcpRedirection SrcPort="10002" RedirectionIP="127.0.0.1" RedirectionPort="10003" Mode="1" ConnectState="0" /> -->
</config>