# -*- CMakeLists.txt generated by CodeLite IDE. Do not edit by hand -*-

cmake_minimum_required(VERSION 2.8.11)

# Project name
project(ZooClient)

# This setting is useful for providing JSON file used by CodeLite for code completion
set(CMAKE_EXPORT_COMPILE_COMMANDS 1)

# Set default locations
set(CL_OUTPUT_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/../../../Build/cmake-build-Release/output)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})

set(CONFIGURATION_NAME "Release")

# Projects


# Top project
# Define some variables
set(PROJECT_ZooClient_PATH "${CMAKE_CURRENT_LIST_DIR}")
set(WORKSPACE_PATH "${CMAKE_CURRENT_LIST_DIR}/../../../Build")



#{{{{ User Code 1
# Place your code here
#}}}}

include_directories(
    .
    ../../../purenessscopeserver/Common
    ../../../../../zookeeper-release-3.5.4/src/c/include

)


# Compiler options
add_definitions(-O2 -fPIC -DTHREADED -Wall -fexceptions)
add_definitions(
    -DTHREADED
)


# Linker options
set(LINK_OPTIONS -s)


if(WIN32)
    # Resource options
endif(WIN32)

# Library path
set(CMAKE_LDFLAGS "${CMAKE_LDFLAGS} -L. -L. -LRelease ")

# Define the CXX sources
set ( CXX_SRCS
    ${CMAKE_CURRENT_LIST_DIR}/./ZooClient/ZooClient.cpp
    ${CMAKE_CURRENT_LIST_DIR}/./ZooClient/BaseCommand.cpp
    ${CMAKE_CURRENT_LIST_DIR}/./ZooClient/zkClient.cpp
)

set_source_files_properties(
    ${CXX_SRCS} PROPERTIES COMPILE_FLAGS 
    " -O2 -fPIC -DTHREADED -Wall -fexceptions")

if(WIN32)
    enable_language(RC)
    set(CMAKE_RC_COMPILE_OBJECT
        "<CMAKE_RC_COMPILER> ${RC_OPTIONS} -O coff -i <SOURCE> -o <OBJECT>")
endif(WIN32)



#{{{{ User Code 2
# Place your code here
#}}}}

add_library(ZooClient SHARED ${RC_SRCS} ${CXX_SRCS} ${C_SRCS})
target_link_libraries(ZooClient ${LINK_OPTIONS})



#{{{{ User Code 3
# Place your code here
#}}}}

